From b3e8b45db32c7eaea74306f60717fa86f22e40d5 Mon Sep 17 00:00:00 2001
From: RenzoQuispe <renzo123cd@gmail.com>
Date: Fri, 13 Jun 2025 18:16:24 -0500
Subject: [PATCH 1/3] feat(script): (Issue #18) actualizar script
 backup_state.sh con validacion de existencia de iac/terraform.tfstate

---
 scripts/backup_state.sh | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/scripts/backup_state.sh b/scripts/backup_state.sh
index b51f9af..acdb002 100755
--- a/scripts/backup_state.sh
+++ b/scripts/backup_state.sh
@@ -7,5 +7,10 @@ mkdir -p "$ruta_raiz_proyecto/backups"
 # creacion de una copia de terraform.tfstate a backups, se coloca timestamp para diferenciar entre backups
 timestamp="$(date +"%Y-%m-%d_%H-%M-%S")"
 ruta_terraform_state="$ruta_raiz_proyecto/iac/terraform.tfstate"
+# verificar que iac/terraform.tfstate existe
+if [ ! -f "$ruta_terraform_state" ]; then
+  echo "iac/terraform.tfstate no existe"
+  exit 1
+fi
 ruta_nuevo_backup="$ruta_raiz_proyecto/backups/tfstate_${timestamp}.backup"
 cp "$ruta_terraform_state" "$ruta_nuevo_backup"
\ No newline at end of file
-- 
2.47.2


From 429ac9da9d83c5bc05c674ba4e142b10e1335e83 Mon Sep 17 00:00:00 2001
From: RenzoQuispe <renzo123cd@gmail.com>
Date: Fri, 13 Jun 2025 18:19:46 -0500
Subject: [PATCH 2/3] =?UTF-8?q?feat(script):=20(Issue=20#19)=20actualizar?=
 =?UTF-8?q?=20script=20restore=5Fstate.sh=20con=20validaci=C3=B3n=20de=20i?=
 =?UTF-8?q?ntegridad=20JSON=20y=20clave=20version?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 scripts/restore_state.sh | 22 +++++++++++++++-------
 1 file changed, 15 insertions(+), 7 deletions(-)

diff --git a/scripts/restore_state.sh b/scripts/restore_state.sh
index 8eb3aef..05e5cb1 100755
--- a/scripts/restore_state.sh
+++ b/scripts/restore_state.sh
@@ -12,15 +12,23 @@ if [ ! -d "$ruta_carpeta_backups" ]; then
   exit 1
 fi
 # lista de los archivos_backups que hay en la carpeta backups
-read -ra archivos_backups <<< "$(ls "$ruta_carpeta_backups")"
+archivos_backups=()
+for archivo in "$ruta_carpeta_backups"/*.backup; do
+  # verificar la integraidad del JSON
+  if jq empty "$archivo" >/dev/null 2>&1; then
+    # verificar version
+    if jq -e 'has("version")' "$archivo" >/dev/null 2>&1; then
+      archivos_backups+=("$(basename "$archivo")")
+    else
+      echo "backup $(basename "$archivo") presenta error version"
+    fi
+  else
+    echo "backup $(basename "$archivo") da√±ado"
+  fi
+done
 numero_backups=${#archivos_backups[@]}
-# verificar si hay archivos backup
-if [ "$numero_backups" -eq 0 ]; then
-  echo "No se encontraron archivos backups"
-  exit 1
-fi
 # menu de backups para escoger
-echo "Lista de backups"
+echo "Lista de backups validos"
 for i in "${!archivos_backups[@]}"; do
   numero=$((i+1))
   echo "$numero- ${archivos_backups[$i]}"
-- 
2.47.2


From 46af8323d4009a8724ddacb29f8ce99332753be1 Mon Sep 17 00:00:00 2001
From: RenzoQuispe <renzo123cd@gmail.com>
Date: Sun, 15 Jun 2025 18:15:09 -0500
Subject: [PATCH 3/3] refactor(sh): (Issue #19) actualizar restore_state.sh con
 verificacion de "version": 4

---
 scripts/restore_state.sh | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/scripts/restore_state.sh b/scripts/restore_state.sh
index 05e5cb1..4dc27b9 100755
--- a/scripts/restore_state.sh
+++ b/scripts/restore_state.sh
@@ -16,9 +16,14 @@ archivos_backups=()
 for archivo in "$ruta_carpeta_backups"/*.backup; do
   # verificar la integraidad del JSON
   if jq empty "$archivo" >/dev/null 2>&1; then
-    # verificar version
+    # verificar si tiene la clave version
     if jq -e 'has("version")' "$archivo" >/dev/null 2>&1; then
-      archivos_backups+=("$(basename "$archivo")")
+      # verificar si version es 4
+      if [ "$(jq -r '.version' "$archivo")" -eq 4 ] >/dev/null 2>&1; then
+        archivos_backups+=("$(basename "$archivo")")
+      else
+        echo "backup $(basename "$archivo") tiene version no valida, debe ser 4"
+      fi
     else
       echo "backup $(basename "$archivo") presenta error version"
     fi
-- 
2.47.2

